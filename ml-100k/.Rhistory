library("recommenderlab")
data(MovieLense)
MovieLense
train<-MovieLense[1:900]
u<-MovieLense[901]
as(u,"matrix")[,1:5]
r<-Recommender(train,method="UBCF")
p<-r@model$data@data@p
recom<-predict(r,u,n=5)
recom
as(recom,"list")
u.data<-read.delim("u.data")
names(u.data)<-c("userid","itemid","rating","timestamp")
u.info<-read.delim("u.info")
u.item<-read.delim("u.item",sep="|")
names(u.item)<-c("moveid","movietitle","releasedate","videoreleasedate","IMDbURL","uknown","Action","Adventure","Animation","Children's","Comedy","Crime","Documentary","Drama","Fantasy","Film-Noir","Horror","Musical","Mystery","Romance","Sci-Fi","Thriller","War","Western")
u.genre<-read.delim("u.genre",sep="|")
u.user<-read.delim("u.user",sep="|")
names(u.user)<-c("userid","age","gender","occupation","zipcode")
u.occupation<-read.delim("u.occupation")
View(u.occupation)
View(u.genre)
View(u.user)
View(u.data)
recom
View(u.genre)
View(u.user)
data=read.csv("Personal.csv")
data=read.csv("Personal.csv")
split(data$age,age.group)
age.group=c(14,24,34,44,54,64)
split(data$age,age.group)
age.group=rep(0,943)
age=data$age
age.divide=c(14,24,34,44,54,64,74)
age.group=rep(0,943)
age=data$age
age.divide=c(14,24,34,44,54,64,74)
age.group=rep(0,943)
for(i in 1:943){
for(j in 1:7)
if(age[i]<age.divide[j]){
age.group[i]=j
break
}
}
View(data)
data$age.group=as.factor(data$age.group)
data$age.group=as.factor(age.group)
data=read.csv("Personal.csv")
age=data$age
age.divide=c(14,24,34,44,54,64,74)
age.group=rep(0,943)
for(i in 1:943){
for(j in 1:7)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
data$age.group=as.factor(age.group)
View(data)
View(data)
col.names(data)
colnames(data)
which("star" %in% colnames(data))
which("Star" %in% colnames(data))
which("a" %in% colnames(data))
data[57,]
colnames(data)[57]
colnames(data)[50]
colnames(data)[51]
colnames(data)[52]
colnames(data)[53]
colnames(data)[54]
colnames(data)[56]
colnames(data)[57]
?"mean"
tapply(data[,57], data$age.group, mean)
tapply(data[,57], data$age.group, mean(na.rm=TRUE))
tapply(data[,57], data$age.group, mean(),na.rm=TRUE)
tapply(complete.cases(data[,57]), data$age.group, mean())
complete.cases(data[,57])
tapply(complete(data[,57]), data$age.group, mean())
tapply(data[,57][complete.cases(data[,57])], data$age.group, mean())
data[,57][complete.cases(data[,57])]
tapply(data[,57][complete.cases(data[,57])],INDEX = data$age.group, mean)
data$age.group=as.factor(age.group)
tapply(data[,c(57,][complete.cases(data[,57])],INDEX = data$age.group[complete.cases(data[,57])],FUN = mean)
tapply(data[,c(57,][complete.cases(data[,57])],INDEX = data$age.group[complete.cases(data[,57])],FUN = mean)
tapply(data[,c(57)][complete.cases(data[,57])],INDEX = data$age.group[complete.cases(data[,57])],FUN = mean)
mean(data[,c(57)],na.rm=TRUE)
colnames(data)[56]
colnames(data)[56]
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data$age.group[complete.cases(data[,56])],FUN = mean)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
max(a)
table(a)
sort(a)
sort(a)
sort(a)[1]
sort(a)[1664]
sort(a)[1665]
sort(a)[1656:1665]
sort(a)[1655:1664]
names(sort(a)[1655:1664])
which(names(data) %in% names(sort(a)[1655:1664]))
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
tapply(data[,c(i)][complete.cases(data[,i])],INDEX = data$age.group[complete.cases(data[,i])],FUN = mean)
}
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = data$age.group[complete.cases(data[,i])],FUN = mean))
}
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data$gender[complete.cases(data[,56])],FUN = mean)
mean(data[,c(57)],na.rm=TRUE)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
names(sort(a)[1655:1664])
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = data$gender[complete.cases(data[,i])],FUN = mean))
}
install.packages("plotly")
install.packages("plotly")
data=read.csv("Personal.csv")
age=data$age
age.divide=c(14,24,34,44,54,64,74)
age.group=rep(0,943)
for(i in 1:943){
for(j in 1:7)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
data$age.group=as.factor(age.group)
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data$age.group[complete.cases(data[,56])],FUN = mean)
mean(data[,c(57)],na.rm=TRUE)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
names(sort(a)[1655:1664])
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = data$age.group[complete.cases(data[,i])],FUN = mean))
}
library(plotly)
midwest
load(midwest)
data("midwest")
dat=data
data=read.csv("Personal.csv")
age=data$age
age.divide=c(14,24,34,44,54,64,74)
age.group=rep(0,943)
for(i in 1:943){
for(j in 1:7)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
##age
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data$age.group[complete.cases(data[,56])],FUN = mean)
mean(data[,c(57)],na.rm=TRUE)
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data$age.group[complete.cases(data[,56])],FUN = mean)
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = age.group[complete.cases(data[,56])],FUN = mean)
mean(data[,c(57)],na.rm=TRUE)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
names(sort(a)[1655:1664])
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = data$age.group[complete.cases(data[,i])],FUN = mean))
}
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = age.group[complete.cases(data[,i])],FUN = mean))
}
library(plotly)
dat=data
dat$agegroup=age.group
colnames(dat)
dat[57,]
dat[,57]
colnames(dat)[57]
colnames(dat)[56]
dat=dat[c(1,56,1675)]
dat=dat[c(1,56,1675),]
View(dat)
dat=data
dat$agegroup=age.group
dat=dat[c(1,56,1671),]
View(dat)
dat$agegroup=age.group
dat=data
dat$agegroup=age.group
dat=dat[,c(1,56,1671)]
View(dat)
dat=dat[,c(1,56,1671)][complete.cases(data[,56]),]
dat=dat[,c(1,56,1671)][complete.cases(data[,56]),]
dat=dat[[complete.cases(data[,56]),],c(1,56,1671)]
dat=dat[complete.cases(data[,56]),c(1,56,1671)]
dat=data
dat$agegroup=age.group
dat=dat[,c(1,56,1671)]
d=dat[complete.cases(data[,c(56)),]
d=dat[complete.cases(data[,c(56)]),]
View(d)
dat=data
dat$agegroup=as.factor(age.group)
dat=dat[,c(1,56,1671)]
d=dat[complete.cases(data[,c(56)]),]
p <- plot_ly(d, x = Star.Wars..1977., color = agegroup, type = "box")
p
p=plot_ly(d, x = agegroup, y = Star.Wars..1977.,mode = "markers", color = carat, size = carat)
which(names(data) %in% names(sort(a)[1655:1664]))
for(i in  which(names(data) %in% names(sort(a)[1655:1664]))){
dat$agegroup=as.factor(age.group)
dat=dat[,c(1,7,1671)]
d=dat[complete.cases(data[,i]),]
p=plot_ly(d, x = Star.Wars..1977., y = agegroup,mode = "markers", color = agegroup, size = Star.Wars..1977.)
p
}
for(i in  which(names(data) %in% names(sort(a)[1655:1664]))){
dat=data
dat$agegroup=as.factor(age.group)
dat=dat[,c(1,i,1671)]
d=dat[complete.cases(data[,i]),]
p=plot_ly(d, x = Star.Wars..1977., y = agegroup,mode = "markers", color = agegroup, size = Star.Wars..1977.)
p
}
names(data[,7])
colnames(data[,7])
which(names(data) %in% names(sort(a)[1655:1664]))
colnames(data)[7]
colnames(data)[56]
as.character(colnames(data)[56])
colnames(data)[56]
colnames(data)[106]
dat=data
dat$agegroup=as.factor(age.group)
dat=dat[,c(1,106,1671)]
d=dat[complete.cases(data[,106]),]
d$Fargo..1996.
d[,3]
colnames(data)[106]
Fargo..1996.
colnames(data)[127]
colnames(data)[187]
colnames(data)[264]
colnames(data)[291]
colnames(data)[293]
colnames(data)[299]
colnames(data)[305]
hist(data$age)
data=read.csv("Personal.csv")
age=data$age
age.divide=c(20,25,30,35,40,50,60)
age.group=rep(8,943)
for(i in 1:943){
for(j in 1:8)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
age=data$age
age.divide=c(20,25,30,35,40,50,60)
age.group=rep(8,943)
for(i in 1:943){
for(j in 1:7)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
tapply(data[,c(56)][complete.cases(data[,56])],INDEX =age.group[complete.cases(data[,56])],FUN = mean)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
names(sort(a)[1655:1664])
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = age.group[complete.cases(data[,i])],FUN = mean))
}
library(plotly)
dat=data
dat$agegroup=as.factor(age.group)
dat=dat[,c(1,7,1671)]
d=dat[complete.cases(data[,7]),]
p=plot_ly(d, x = Toy.Story..1995., color = agegroup,type="box")
p
plot(age.group)
table(age.group)
data=read.csv("Personal.csv")
age=data$age
age.divide=c(20,25,30,35,40,50)
age.group=rep(7,943)
for(i in 1:943){
for(j in 1:6)
if(age[i]<=age.divide[j]){
age.group[i]=j
break
}
}
tapply(data[,c(56)][complete.cases(data[,56])],INDEX =age.group[complete.cases(data[,56])],FUN = mean)
m = as.matrix(data[, 7:1670])
m[is.na(m)]<-0
a<-apply(m,2,function(c)sum(c!=0))
names(sort(a)[1655:1664])
for(i in which(names(data) %in% names(sort(a)[1655:1664]))){
print(tapply(data[,c(i)][complete.cases(data[,i])],INDEX = age.group[complete.cases(data[,i])],FUN = mean))
}
unique(data$occupation)
job=unique(data$occupation)[-2,,-17-19]
job=unique(data$occupation)[-2,-17,-19]
job=unique(data$occupation)
job=job[-2,-17,-19]
job=job[c(-2,-17,-19)]
job=unique(data$occupation)[c(-2,-17,-19)]
length(job)
job=as.factor(as.character(unique(data$occupation)[c(-2,-17,-19)]))
job.d=data[which(data$job %in% job)]
job.d=data[which(data$job %in% job),]
View(job.d)
data$occupation
job.d=data[which(data$occupation %in% job),]
View(job.d)
tapply(job.d[,c(56)][complete.cases(job.d[,56])],INDEX =job,FUN = mean)
tapply(job.d[,c(56)][complete.cases(job.d[,56])],INDEX = job.d$occupation,FUN = mean)
tapply(job.d[,c(56)][complete.cases(job.d[,56])],INDEX = job.d[complete.cases(job.d[,56])]$occupation,FUN = mean)
job.d[,c(56)][complete.cases(job.d[,56])]
job.d[complete.cases(job.d[,56])]$occupation
View(d)
View(dat)
tapply(data[,c(56)][complete.cases(data[,56])],INDEX = data[complete.cases(data[,56])]$occupation,FUN = mean)
data[,56][complete.cases(data[,56])]
data[complete.cases(data[,56])]$occupation
data[complete.cases(data[,56])]
tapply(data[,56][complete.cases(data[,56])],INDEX = data$occupation[complete.cases(data[,56])],FUN = mean)
colnames(data)[56]
tapply(data[,7][complete.cases(data[,7])],INDEX = data$occupation[complete.cases(data[,7])],FUN = mean)
tapply(data[,305][complete.cases(data[,305])],INDEX = data$occupation[complete.cases(data[,305])],FUN = mean)
colnames(data)[305]
colnames(data)[299]
colnames(data)[291]
colnames(data)[264]
colnames(data)[187]
colnames(data)[127]
tapply(data[,127][complete.cases(data[,127])],INDEX = data$occupation[complete.cases(data[,127])],FUN = mean)
tapply(data[,264][complete.cases(data[,264])],INDEX = data$occupation[complete.cases(data[,264])],FUN = mean)
tapply(data[,127][complete.cases(data[,127])],INDEX = data$occupation[complete.cases(data[,127])],FUN = mean)
job.d=data[,c(1,5,7  ,56 ,106 ,127 ,187, 264, 291, 293, 299, 305)]
View(job.d)
colnames(job.d)
?aggregate()
bilan=aggregate(cbind(colnames(job.d)[3:12])~specie , data=job.d , mean)
bilan=aggregate(cbind(colnames(job.d)[3:12])~occupation , data=job.d , mean)
tapply(data[,305][complete.cases(data[,305])],INDEX = data$occupation[complete.cases(data[,305])],FUN = mean)
tapply(data[,127][complete.cases(data[,127])],INDEX = data$occupation[complete.cases(data[,127])],FUN = mean)
tapply(data[,264][complete.cases(data[,264])],INDEX = data$occupation[complete.cases(data[,264])],FUN = mean)
rownames(gender.mean)
x=tapply(data[,127][complete.cases(data[,127])],INDEX = data$occupation[complete.cases(data[,127])],FUN = mean)
x
x=tapply(data[,305][complete.cases(data[,305])],INDEX = data$occupation[complete.cases(data[,305])],FUN = mean)
barplot(x,col = names(x))
colnames(data)[305]
![Caption the picture.](/Users/hechenxi/Desktop/Screen Shot 2016-03-01 at 9.48.11 PM.png)
getwd()
!['Caption the picture'](logic.png)
![](logic.png)
!['Caption the picture'](logic.png)
cols<-terrain.colors(23)
u.item<-read.delim("u.item",sep="|",head=F)
names(u.item)<-c("moveid","movietitle","releasedate","videoreleasedate","IMDbURL","uknown","Action","Adventure","Animation","Children's","Comedy","Crime","Documentary","Drama","Fantasy","Film-Noir","Horror","Musical","Mystery","Romance","Sci-Fi","Thriller","War","Western")
m = as.matrix(data[,6:1669])
m = as.matrix(data[,7:1670])
m[is.na(m)]<-0
numberofrating<-apply(m,1,function(c)sum(c!=0))
numberofrating
active<- which(order(numberofrating) %in% c(1:10)) #top 10 active person
category<-rep(0,18)
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[6:1669] %in% as.character(title))+5
m<-as.matrix(data[868,indice])
category[i]<-mean(m,na.rm=TRUE)
}
names(category)<-colnames(u.item)[7:24]
cols<-terrain.colors(23)
barplot(category,xlab="Category",ylim=c(0,5))
category
active<- which(order(numberofrating) %in% c(1:10)) #top 10 active person
active
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[7:1670] %in% as.character(title))+5
m<-as.matrix(data[868,indice])
category[i]<-mean(m,na.rm=TRUE)
}
names(category)<-colnames(u.item)[7:24]
cols<-terrain.colors(23)
barplot(category,xlab="Category",ylim=c(0,5))
category
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[7:1670] %in% as.character(title))+6
m<-as.matrix(data[868,indice])
category[i]<-mean(m,na.rm=TRUE)
}
(category)
index,-which(u.item[,7]!=0)
index<-which(u.item[,7]!=0)
index
title<-u.item$movietitle[index]
which(colnames(data)[7:1670] %in% as.character(title))
as.character(title)
str(colnames(data)[7:1670])
u.data<-read.delim("u.data",head=F)
u.user<-read.delim("u.user",sep="|",head=F)
names(u.user)<-c("userid","age","gender","occupation","zipcode")
part<-matrix(rep(0,943*1664),ncol=1664)
for(i in 1:943){
u<-MovieLense[i]
uu<-as(u,"matrix")
part[i,]<-uu
}
data(MovieLense)
library("recommenderlab")
for(i in 1:943){
u<-MovieLense[i]
uu<-as(u,"matrix")
part[i,]<-uu
}
MovieLense
data(MovieLense)
MovieLense
for(i in 1:943){
u<-MovieLense[i]
uu<-as(u,"matrix")
part[i,]<-uu
}
data<-cbind(u.user,part)
m[is.na(m)]<-0
numberofrating<-apply(m,1,function(c)sum(c!=0))
active<- which(order(numberofrating) %in% c(1:10)) #top 10 active person
category<-rep(0,18)
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[6:1669] %in% as.character(title))+5
m<-as.matrix(data[868,indice])
category[i]<-mean(m,na.rm=TRUE)
}
names(category)<-colnames(u.item)[7:24]
category)
category
View(data)
View(part)
data<-cbind(u.user,part)
colnames(part)<-colnames(uu)
data<-cbind(u.user,part)
colnames(data)[6]
str(colnames(data)[6])
m = as.matrix(data[,6:1669])
m[is.na(m)]<-0
numberofrating<-apply(m,1,function(c)sum(c!=0))
active<- which(order(numberofrating) %in% c(1:10)) #top 10 active person
active
index<-which(u.item[,7]!=0)
index
title<-u.item$movietitle[index]
str(title)
as.character(title)
str(colnames(data)[6:1669])
which(colnames(data)[6:1669] %in% as.character(title))
which(indice==1)
min(indice)
summary(indice)
indice<-which(colnames(data)[6:1669] %in% as.character(title))
summary(indice)
indice<-which(colnames(data)[6:1669] %in% as.character(title))+5
m<-as.matrix(data[868,indice])
mean(m,na.rm=TRUE)
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[6:1669] %in% as.character(title))+5
m<-as.matrix(data[868,indice])
category[i]<-mean(m,na.rm=TRUE)
}
category
names(category)<-colnames(u.item)[7:24]
cols<-terrain.colors(23)
barplot(category,xlab="Category",ylim=c(0,5))
barplot(category,xlab="Category",ylim=c(0,5),col=cols)
category<-rep(0,18)
active
which(order(numberofrating)==2)
for(i in 1:18){
index<-which(u.item[,6+i]!=0)
title<-u.item$movietitle[index]
indice<-which(colnames(data)[6:1669] %in% as.character(title))+5
m<-as.matrix(data[452,indice])
category[i]<-mean(m,na.rm=TRUE)
}
names(category)<-colnames(u.item)[7:24]
cols<-terrain.colors(23)
barplot(category,xlab="Category",ylim=c(0,5),col=cols)
